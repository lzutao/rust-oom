name: Rust

on:
  push:
    branches:
      - 'master'
      - '!gh-pages'
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [linux64, linux32, macos, win64]
        include:
          - build: linux64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - build: linux32
            os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
          - build: win64
            os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v2
      - name: Install g++-multilib
        run: |
          set -e
          # Remove the ubuntu-toolchain-r/test PPA, which is added by default.
          # Some packages were removed, and this is causing the g++multilib
          # install to fail. Similar issue:
          # https://github.com/scikit-learn/scikit-learn/issues/13928.
          sudo add-apt-repository --remove ppa:ubuntu-toolchain-r/test
          sudo apt-get install g++-multilib
        shell: bash
        if: matrix.build == 'linux32'
      - run: |
          rustup toolchain install stable-${{ matrix.target }}
          rustup default stable-${{ matrix.target }}
      - run: cargo build
      - run: cargo build --all-targets
      - run: cargo test

  rustdoc:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name != 'pull_request' && github.event.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - run: |
          rustup toolchain install nightly
          rustup default nightly
      - run: cargo doc --all --no-deps # --document-private-items
      - name: Commit docs to gh-pages branch
        working-directory: target/doc
        run: |
          REV=$(git rev-parse --short HEAD)
          git init
          git remote add upstream https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/lzutao/rust-oom
          git config user.name "Actions"
          git config user.email "Actions@example.com"
          git add -A .
          git commit -qm "Documentation for ${{github.repository}}@${REV}"
      - name: Push gh-pages to GitHub
        working-directory: target/doc
        run: |
          git push -q upstream HEAD:gh-pages --force

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup toolchain install stable -c rustfmt
      - run: cargo fmt -- --check

  clippy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - run: |
          rustup toolchain install nightly -c clippy
          rustup default nightly
      - run: |
          cargo check --all --all-targets
          git ls-files '*.rs' | xargs touch
      - run: cargo clippy --all --all-targets -- -Dwarnings

  ## NOTE: `miri` does not run doc-tests: <https://github.com/rust-lang/miri/issues/584>.
  miri:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2
      - run: |
          MIRI_NIGHTLY=nightly-$(curl -s https://rust-lang.github.io/rustup-components-history/x86_64-unknown-linux-gnu/miri)
          echo "Installing latest nightly with Miri: $MIRI_NIGHTLY"
          rustup toolchain install "$MIRI_NIGHTLY" -c miri
          rustup default "$MIRI_NIGHTLY"
      - run: cargo miri test
